@using EasyAbp.AbpHelper.Gui.Localization
@inherits GuiComponentBase
@inject AbpBlazorMessageLocalizerHelper<GuiResource> Lh

<Card>
    <CardHeader>
        @* ************************* PAGE HEADER ************************* *@
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h4>@L["ModuleManagement_Explorer"]</h4>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                @* Todo: Invoke BuildAppProjectsInstalledModuleNamesAsync() after the installation is completed. *@
                <Button Color="Color.Primary" Size="Size.Large" Clicked="() => InstallationActuatorModal.OpenAsync(GetAddManyModuleInputList(), GetRemoveManyModuleInputList())">@L["Install"]</Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <Tabs TabPosition="TabPosition.Left" Pills="true" @bind-SelectedTab="@SelectedTab">
            <Items>
                @foreach (var group in ModuleGroups)
                {
                    <Tab Name="@group.Id">
                        @if (group.Modules.Any(x => x.Checked))
                        {
                            <span>
                                <b>@group.Id</b>
                            </span>
                        }
                        else
                        {
                            <span>
                                @group.Id
                            </span>
                        }
                    </Tab>
                }
            </Items>
            <Content>
                @foreach (var group in ModuleGroups)
                {
                    <TabPanel Name="@group.Id">
                        <h4>@group.Id</h4>
                        
                        <Divider />
                        
                        <Field>
                            <Check
                                Checked="@group.Modules.All(x => x.Checked)"
                                Indeterminate="@(group.Modules.Any(x => x.Checked) && group.Modules.Any(x => !x.Checked))"
                                Cursor="Cursor.Pointer"
                                CheckedChanged="@(b => ModulesAllChanged(b, group))"
                                TValue="bool">
                                @L["InstallThisModuleGroup"]
                            </Check>
                        </Field>

                        <Divider />
                        
                        @foreach (var module in group.Modules)
                        {
                            <Field Margin="Margin.Is0.OnAll">
                                <Check
                                    Cursor="Cursor.Pointer"
                                    Checked="@module.Checked"
                                    CheckedChanged="@(b => ModuleChanged(b, module))"
                                    TValue="bool">
                                    @($"{group.Id}.{module.Id}")
                                </Check>
                            </Field>
                        }
                        
                    </TabPanel>
                }
            </Content>
        </Tabs>
    </CardBody>
</Card>

<InstallationActuatorModal @ref="InstallationActuatorModal" />